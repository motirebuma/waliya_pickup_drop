import 'package:flutter/material.dart';
import 'package:flutter_typeahead/flutter_typeahead.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class LocationInputWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Location Input'),
      ),
      body: LocationSearch(),
    );
  }
}

class LocationSearch extends StatefulWidget {
  @override
  _LocationSearchState createState() => _LocationSearchState();
}

class _LocationSearchState extends State<LocationSearch> {
  List<String> _locations = [];

  Future<List<String>> _getLocationSuggestions(String query) async {
    String url = "http://amircreations.com/walya/get_all_places.php";
    final response = await http.get(Uri.parse(url));

    if (response.statusCode == 200) {
      List<dynamic> data = json.decode(response.body)['response'];
      List<String> cityNames = [];
      for (var location in data) {
        String cityName = location['city'];
        if (cityName.isNotEmpty &&
            cityName.toLowerCase().contains(query.toLowerCase())) {
          cityNames.add(cityName);
        }
      }
      return cityNames;
    } else {
      return [];
    }
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: TypeAheadField(
        textFieldConfiguration: TextFieldConfiguration(
          autofocus: true,
          decoration: InputDecoration(
            hintText: 'Enter your location...',
            border: OutlineInputBorder(),
          ),
        ),
        suggestionsCallback: (pattern) async {
          return await _getLocationSuggestions(pattern);
        },
        itemBuilder: (context, suggestion) {
          return ListTile(
            title: Text(suggestion),
          );
        },
        onSuggestionSelected: (suggestion) {
          // Do something with the selected location suggestion
          print('Selected Location: $suggestion');
        },
      ),
    );
  }
}












import 'package:flutter/material.dart';
import 'package:flutter_typeahead/flutter_typeahead.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class PickupLocation extends StatefulWidget {
  const PickupLocation({super.key});

  @override
  State<PickupLocation> createState() => _PickupLocationState();
}

class _PickupLocationState extends State<PickupLocation> {
  TextEditingController _textEditingController = TextEditingController();

  @override
  void dispose() {
    _textEditingController.dispose();
    super.dispose();
  }

  Future<List<String>> _getLocationSuggestions(String query) async {
    if (query.isEmpty) {
      return []; // Return an empty list when the input is empty
    }

    String url = "http://amircreations.com/walya/get_all_places.php";
    final response = await http.get(Uri.parse(url));

    if (response.statusCode == 200) {
      List<dynamic> data = json.decode(response.body)['response'];
      Set<String> cityNames = Set<String>();
      for (var location in data) {
        String cityName = location['city'];
        if (cityName.isNotEmpty &&
            cityName.toLowerCase().contains(query.toLowerCase())) {
          cityNames.add(cityName);
        }
      }
      return cityNames.toList(); // Convert Set to List for suggestions
    } else {
      return [];
    }
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Container(
          padding:
              const EdgeInsets.only(top: 10, bottom: 10, left: 20, right: 20),
          child: Builder(
            builder: (context) {
              return TypeAheadFormField(
                key: UniqueKey(), // Add a Key
                textFieldConfiguration: TextFieldConfiguration(
                  controller: _textEditingController,
                  decoration: const InputDecoration(
                    border: OutlineInputBorder(),
                    prefixIcon: Icon(Icons.location_on),
                    labelText: 'Pickup Location',
                  ),
                ),
                suggestionsCallback: (pattern) async {
                  return await _getLocationSuggestions(pattern);
                },
                itemBuilder: (context, suggestion) {
                  return ListTile(
                    title: Text(suggestion),
                  );
                },
                onSuggestionSelected: (suggestion) {
                  // Update the input value with the selected suggestion
                  _textEditingController.text = suggestion;
                  print('Selected Pickup Location: $suggestion');
                },
              );
            },
          ),
        ),
        Container(
          padding:
              const EdgeInsets.only(top: 10, bottom: 10, left: 20, right: 20),
          child: const TextField(
            decoration: InputDecoration(
              border: OutlineInputBorder(),
              prefixIcon: Icon(Icons.location_city),
              labelText: 'Pickup specific location',
            ),
          ),
        )
      ],
    );
  }
}





// import 'package:flutter/material.dart';
// import 'package:flutter/src/widgets/container.dart';
// import 'package:flutter/src/widgets/framework.dart';

// class PickupLocation extends StatefulWidget {
//   const PickupLocation({super.key});

//   @override
//   State<PickupLocation> createState() => _PickupLocationState();
// }

// class _PickupLocationState extends State<PickupLocation> {
//   @override
//   Widget build(BuildContext context) {
//     return Column(
//       children: [
//         Container(
//           padding:
//               const EdgeInsets.only(top: 10, bottom: 10, left: 20, right: 20),
//           child: const TextField(
//             decoration: InputDecoration(
//               border: OutlineInputBorder(),
//               prefixIcon: Icon(Icons.location_on),
//               labelText: 'Pickup Location',
//             ),
//           ),
//         ),
//         Container(
//           padding:
//               const EdgeInsets.only(top: 10, bottom: 10, left: 20, right: 20),
//           child: const TextField(
//             decoration: InputDecoration(
//               border: OutlineInputBorder(),
//               prefixIcon: Icon(Icons.location_city),
//               labelText: 'Pickup specific location',
//             ),
//           ),
//         )
//       ],
//     );
//   }
// }




// pick up info

import 'package:flutter/material.dart';
import 'package:waliya_test/components/LocationSearch.dart';
import 'package:waliya_test/components/LocationCard.dart';
import 'package:waliya_test/screen/pickup_drop_page.dart';

class PickupInfo extends StatefulWidget {
  const PickupInfo({super.key});

  @override
  State<PickupInfo> createState() => _PickupInfoState();
}

class _PickupInfoState extends State<PickupInfo> {
  DateTime initial = DateTime.now();
  DateTime last = DateTime.now();

  // dropdown country
  String selectedCountry = 'Ethiopia ðŸ‡ªðŸ‡¹';

  // day picker
  DateTime _selectedDate = DateTime.now();

  Future<void> _selectDate(BuildContext context) async {
    final DateTime? picked = await showDatePicker(
      context: context,
      initialDate: _selectedDate,
      firstDate: DateTime(2000),
      lastDate: DateTime(2101),
    );
    if (picked != null && picked != _selectedDate) {
      setState(() {
        _selectedDate = picked;
      });
    }
  }

  Widget Location(country, loc_type) {
    if (country == 'Ethiopia ðŸ‡ªðŸ‡¹') {
      return LocationBox().locationBox(
        loc_type,
        () => {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => LocationSearch(),
            ),
          ),
        },
      );
    } else {
      return const Text('');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.only(right: 30, left: 30, top: 10, bottom: 10),
      child: Container(
        padding: const EdgeInsets.only(top: 10, bottom: 10),
        decoration: BoxDecoration(
          color: Colors.white,
          boxShadow: const [
            BoxShadow(
              color: Colors.grey,
              offset: Offset(0, 3),
              blurRadius: 4,
            ),
          ],
          borderRadius: BorderRadius.circular(10),
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            // !this will be edited!
            const SizedBox(
              height: 25,
            ),
            const Text(
              'Pickup Information',
              style: TextStyle(
                color: Color(0xff1c1c1c),
                fontSize: 20.0,
              ),
            ),

            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                const Text(
                  'Pickup date',
                  style: TextStyle(
                    color: Color(0xff1c1c1c),
                    fontSize: 16.0,
                  ),
                ),
                Text(
                  '${_selectedDate.day}/${_selectedDate.month}/${_selectedDate.year}',
                  style: const TextStyle(
                    color: Color(0xff1c1c1c),
                    fontSize: 16.0,
                  ),
                ),
                IconButton(
                  onPressed: () => _selectDate(context),
                  icon: Icon(
                    Icons.calendar_month,
                    color: Colors.amber.shade700,
                  ),
                  tooltip: 'Select Date',
                ),
              ],
            ),

            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                const Text(
                  'Pickup Country',
                  style: TextStyle(
                    color: Color(0xff1c1c1c),
                    fontSize: 16.0,
                  ),
                ),
                // ! this will be change to button
                DropdownButton<String>(
                  value: selectedCountry,
                  // isExpanded: true,
                  items: <String>[
                    'Ethiopia ðŸ‡ªðŸ‡¹',
                    'Ertrea ðŸ‡ªðŸ‡·',
                    'Djibouti ðŸ‡©ðŸ‡¯',
                    'Kenya ðŸ‡°ðŸ‡ª',
                    'Sudan ðŸ‡¸ðŸ‡©',
                    'South Sudan ðŸ‡¸ðŸ‡¸',
                    'Somalia ðŸ‡¸ðŸ‡´'
                  ].map<DropdownMenuItem<String>>((String value) {
                    return DropdownMenuItem<String>(
                      value: value,
                      child: Text(
                        value,
                        style: const TextStyle(
                          // color: Colors.amber,
                          color: Color(0xff1c1c1c),
                          fontSize: 16.0,
                        ),
                      ),
                    );
                  }).toList(),
                  // Step 5.
                  onChanged: (String? newValue) {
                    setState(() {
                      selectedCountry = newValue!;
                      // print(selectedCountry);
                    });
                  },
                ),
              ],
            ),
            // PickupLocation(),
            Location(selectedCountry, 'Pickup Location'),
          ],
        ),
      ),
    );
  }
}



// drop info
import 'package:flutter/material.dart';
import 'package:waliya_test/components/LocationCard.dart';
import 'package:waliya_test/components/LocationSearch.dart';

class DorpInformation extends StatefulWidget {
  const DorpInformation({super.key});

  @override
  State<DorpInformation> createState() => _DorpInformationState();
}

class _DorpInformationState extends State<DorpInformation> {
  DateTime initial = DateTime.now();
  DateTime last = DateTime.now();

  // dropdown country
  String selectedCountry = 'Ethiopia ðŸ‡ªðŸ‡¹';

  // day picker
  DateTime _selectedDate = DateTime.now();

  Future<void> _selectDate(BuildContext context) async {
    final DateTime? picked = await showDatePicker(
      context: context,
      initialDate: _selectedDate,
      firstDate: DateTime(2000),
      lastDate: DateTime(2101),
    );
    if (picked != null && picked != _selectedDate) {
      setState(() {
        _selectedDate = picked;
      });
    }
  }

  Widget dropLocation(country) {
    if (country == 'Ethiopia ðŸ‡ªðŸ‡¹') {
      return LocationBox().locationBox(
        'Drop Location',
        () => {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => LocationSearch(),
            ),
          ),
        },
      );
    } else {
      return const Text('');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.only(right: 30, left: 30, top: 10, bottom: 10),
      child: Container(
        padding: const EdgeInsets.only(top: 10, bottom: 10),
        decoration: BoxDecoration(
          color: Colors.white,
          boxShadow: const [
            BoxShadow(
              color: Colors.grey,
              offset: Offset(0, 3),
              blurRadius: 4,
            ),
          ],
          borderRadius: BorderRadius.circular(10),
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const SizedBox(
              height: 25,
            ),
            // !this will be edited!
            const Text(
              'Drop Information',
              style: TextStyle(
                color: Color(0xff1c1c1c),
                fontSize: 20.0,
              ),
            ),

            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                const Text(
                  'Drop date',
                  style: TextStyle(
                    color: Color(0xff1c1c1c),
                    fontSize: 16.0,
                  ),
                ),
                Text(
                  '${_selectedDate.day}/${_selectedDate.month}/${_selectedDate.year}',
                  style: const TextStyle(
                    color: Color(0xff1c1c1c),
                    fontSize: 16.0,
                  ),
                ),
                IconButton(
                  onPressed: () => _selectDate(context),
                  icon: Icon(
                    Icons.calendar_month,
                    color: Colors.amber.shade700,
                  ),
                  tooltip: 'Select Date',
                ),
              ],
            ),

            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                const Text(
                  'Drop Country',
                  style: TextStyle(
                    color: Color(0xff1c1c1c),
                    fontSize: 16.0,
                  ),
                ),
                // ! this will be change to button
                DropdownButton<String>(
                  value: selectedCountry,
                  // isExpanded: true,
                  items: <String>[
                    'Ethiopia ðŸ‡ªðŸ‡¹',
                    'Ertrea ðŸ‡ªðŸ‡·',
                    'Djibouti ðŸ‡©ðŸ‡¯',
                    'Kenya ðŸ‡°ðŸ‡ª',
                    'Sudan ðŸ‡¸ðŸ‡©',
                    'South Sudan ðŸ‡¸ðŸ‡¸',
                    'Somalia ðŸ‡¸ðŸ‡´'
                  ].map<DropdownMenuItem<String>>((String value) {
                    return DropdownMenuItem<String>(
                      value: value,
                      child: Text(
                        value,
                        style: const TextStyle(
                          // color: Colors.amber,
                          color: Color(0xff1c1c1c),
                          fontSize: 16.0,
                        ),
                      ),
                    );
                  }).toList(),
                  // Step 5.
                  onChanged: (String? newValue) {
                    setState(() {
                      selectedCountry = newValue!;
                      // print(selectedCountry);
                    });
                  },
                ),
              ],
            ),
            // PickupLocation(),
            dropLocation(selectedCountry),
          ],
        ),
      ),
    );
  }
}
